package bankingsystem;

import java.sql.Connection; import java.sql.DriverManager; import java.sql.PreparedStatement; import java.sql.ResultSet; import java.sql.SQLException; import java.sql.Statement; import java.util.logging.Level; import java.util.logging.Logger; import javax.swing.JFrame; import javax.swing.JOptionPane;

/** *

@author 61414 */ public class TransferMoney extends javax.swing.JFrame {

/**

Creates new form TransferMoney */ public TransferMoney() { initComponents(); }
/**

This method is called from within the constructor to initialize the form.

WARNING: Do NOT modify this code. The content of this method is always

regenerated by the Form Editor. */ @SuppressWarnings("unchecked") //
private void initComponents() {

lblSender = new javax.swing.JLabel(); tfSenderAccNo = new javax.swing.JTextField(); lblReceiver = new javax.swing.JLabel(); tfReceiverAccNo = new javax.swing.JTextField(); btnTransfer = new javax.swing.JButton(); javax.swing.JLabel lblAmount = new javax.swing.JLabel(); tfAmountToTransfer = new javax.swing.JTextField();

setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

lblSender.setText("Sender(Account Number)"); lblSender.setAutoscrolls(true);

tfSenderAccNo.setName("tfSenderAccNo"); // NOI18N

lblReceiver.setText("Receiver(Account Number)");

tfReceiverAccNo.setName("tfReceiverAccNo"); // NOI18N tfReceiverAccNo.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) { tfReceiverAccNoActionPerformed(evt); } });

btnTransfer.setText("Transfer"); btnTransfer.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) { btnTransferActionPerformed(evt); } });

lblAmount.setText("Amount");

tfAmountToTransfer.setName("tfAmountToTransfer"); // NOI18N

javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); getContentPane().setLayout(layout); layout.setHorizontalGroup( layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(layout.createSequentialGroup() .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(layout.createSequentialGroup() .addGap(39, 39, 39) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(lblSender) .addComponent(lblReceiver) .addComponent(lblAmount)) .addGap(125, 125, 125) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false) .addComponent(tfSenderAccNo, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE) .addComponent(tfReceiverAccNo) .addComponent(tfAmountToTransfer))) .addGroup(layout.createSequentialGroup() .addGap(201, 201, 201) .addComponent(btnTransfer))) .addContainerGap(138, Short.MAX_VALUE)) ); layout.setVerticalGroup( layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(layout.createSequentialGroup() .addGap(27, 27, 27) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(lblSender) .addComponent(tfSenderAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) .addGap(29, 29, 29) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING) .addComponent(lblReceiver) .addComponent(tfReceiverAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) .addGap(30, 30, 30) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(lblAmount) .addComponent(tfAmountToTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE) .addComponent(btnTransfer) .addGap(75, 75, 75)) );

pack(); }//

private void btnTransferActionPerformed(java.awt.event.ActionEvent evt) {

 Connection con=null;
 String query,sender="",reciever="";
 PreparedStatement preparedStmt;
 ResultSet rs;

 Account receiver=new Account();
 float transferAmount=Float.parseFloat(tfAmountToTransfer.getText());
 float senderBalance=0,recieverBalance=0;
 try{
     Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
     con=DriverManager.getConnection("jdbc:mysql://localhost:3306/projectajp2020?useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "oznome@2426");
     
     if(!con.isClosed()) System.out.println("Connected to database");
     
     Statement stmt=con.createStatement();
     
     rs=stmt.executeQuery("select accounts.balance,customer.name from accounts inner join customer on accounts.ssn=customer.ssn where accno='"+tfSenderAccNo.getText()+"'");
     while(rs.next()){
         senderBalance=rs.getFloat("balance");
         sender=rs.getString("name");
     }
     
     rs=stmt.executeQuery("select accounts.balance,customer.name from accounts inner join customer on accounts.ssn=customer.ssn where accno='"+tfReceiverAccNo.getText()+"'");
     while(rs.next()){
         recieverBalance=rs.getFloat("balance");
         reciever=rs.getString("name");
     }
     
     senderBalance=senderBalance-transferAmount; 
     recieverBalance=recieverBalance+transferAmount;
     
     query = "update accounts set balance = "+senderBalance+" where accno = "+tfSenderAccNo.getText();
     preparedStmt = con.prepareStatement(query);
     preparedStmt.executeUpdate();
     
     query = "update accounts set balance = "+recieverBalance+" where accno = "+tfReceiverAccNo.getText();
     preparedStmt = con.prepareStatement(query);
     preparedStmt.executeUpdate();          
     
     
     JFrame frame = new JFrame();
     query="Balance Successfully Transferred."
             + "\nSender: "+sender+"\nNew Balance: "+senderBalance+
             "\nReciever: "+reciever+"\nNew Balance: "+recieverBalance;
     JOptionPane.showMessageDialog(frame, query);
     con.close();
     
 }
 catch(SQLException e){
     System.out.println(e.getMessage());
 } 
 catch (ClassNotFoundException ex) {
     Logger.getLogger(TransferBalance.class.getName()).log(Level.SEVERE, null, ex);
 } 
 catch (InstantiationException ex) {
     Logger.getLogger(TransferBalance.class.getName()).log(Level.SEVERE, null, ex);
 } 
 catch (IllegalAccessException ex) {
     Logger.getLogger(TransferBalance.class.getName()).log(Level.SEVERE, null, ex);
 }
